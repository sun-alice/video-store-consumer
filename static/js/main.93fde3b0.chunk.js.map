{"version":3,"sources":["components/Movie.js","components/MovieCollection.js","components/Customer.js","components/CustomerCollection.js","components/Rental.js","components/RentalCollection.js","components/SearchResult.js","components/SearchResults.js","App.js","registerServiceWorker.js","index.js"],"names":["Movie","props","id","title","overview","release_date","image_url","selectMovieCallback","react_default","a","createElement","Accordion","Card","bg","text","style","width","Header","Img","variant","src","Title","className","Button","type","onClick","Toggle","as","eventKey","Collapse","Body","Text","MovieCollection","movieCollection","movies","map","movie","i","src_components_Movie","Object","assign","key","Customer","name","city","state","phone","account_credit","movies_checked_out_count","selectCustomerCallback","CustomerCollection","customerCollection","customers","customer","src_components_Customer","Table","striped","bordered","hover","Rental","checkout_date","due_date","RentalCollection","rentalCollection","rentals","rental","src_components_Rental","SearchResult","external_id","addMovieCallback","SearchResults","result","src_components_SearchResult","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","preventDefault","newState","searchTerm","target","value","setState","selectCustomer","customerId","selectedCustomer","find","addRental","queryParams","customer_id","Date","getTime","axios","post","concat","then","response","success","componentDidMount","catch","error","message","selectedMovie","selectMovie","movieId","searchForMovies","movieTitle","get","searchResults","data","addMovie","newMovie","updatedData","push","console","log","overdue","_this2","_this3","react_router_dom","Fragment","Navbar","Brand","to","Nav","Link","Form","inline","FormControl","placeholder","build_default","duration","border","body","react_router","exact","path","Jumbotron","fluid","src_components_MovieCollection","src_components_CustomerCollection","length","src_components_RentalCollection","src_components_SearchResults","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.93fde3b0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Movie.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport PropTypes from \"prop-types\";\n\nconst Movie = props => {\n  const {\n    id,\n    title,\n    overview,\n    release_date,\n    image_url,\n    selectMovieCallback\n  } = props;\n\n  return (\n    <ul>\n      <Accordion>\n        <Card bg=\"dark\" text=\"white\" style={{ width: \"20rem\" }}>\n          <Card.Header>\n            <Card.Img variant=\"top\" src={image_url} />\n            <Card.Title className=\"movie-title\">{title}</Card.Title>\n            <Button\n              variant=\"primary\"\n              type=\"button\"\n              onClick={() => {\n                selectMovieCallback(id);\n              }}\n            >\n              Select this Movie\n            </Button>\n          </Card.Header>\n        </Card>\n        <Card bg=\"dark\" text=\"white\" style={{ width: \"20rem\" }}>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n              See More\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n              <Card.Text>{overview}</Card.Text>\n              <Card.Text>Release Date: {release_date}</Card.Text>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </ul>\n  );\n};\n\nMovie.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  release_date: PropTypes.string,\n  image_url: PropTypes.string,\n  selectMovieCallback: PropTypes.func.isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport \"./MovieCollection.css\";\nimport PropTypes from \"prop-types\";\nimport Movie from \"./Movie\";\n\nconst MovieCollection = props => {\n  const movieCollection = props.movies.map((movie, i) => {\n    return (\n      <Movie\n        key={i}\n        {...movie}\n        selectMovieCallback={props.selectMovieCallback}\n      />\n    );\n  });\n\n  return <div className=\"background\">{movieCollection}</div>;\n};\n\nMovieCollection.propTypes = {\n  movies: PropTypes.array,\n  selectMovieCallback: PropTypes.func.isRequired\n};\n\nexport default MovieCollection;\n","import React from \"react\";\nimport \"./Customer.css\";\nimport PropTypes from \"prop-types\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Customer = props => {\n  const {\n    id,\n    name,\n    city,\n    state,\n    phone,\n    account_credit,\n    movies_checked_out_count,\n    selectCustomerCallback\n  } = props;\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{city}</td>\n      <td>{state}</td>\n      <td>{phone}</td>\n      <td>${account_credit}</td>\n      <td>{movies_checked_out_count}</td>\n      <td>\n        <Button\n          variant=\"primary\"\n          type=\"button\"\n          onClick={() => {\n            selectCustomerCallback(id);\n          }}\n        >\n          Select\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nCustomer.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  city: PropTypes.string,\n  state: PropTypes.string,\n  phone: PropTypes.string,\n  account_credit: PropTypes.number,\n  movies_checked_out_count: PropTypes.number.isRequired,\n}\n\nexport default Customer;\n","import React from \"react\";\nimport \"./CustomerCollection.css\";\nimport PropTypes from \"prop-types\";\nimport Customer from \"./Customer\";\nimport Table from \"react-bootstrap/Table\";\n\nconst CustomerCollection = props => {\n  const customerCollection = props.customers.map((customer, i) => {\n    return (\n      <Customer\n        key={i}\n        {...customer}\n        selectCustomerCallback={props.selectCustomerCallback}\n      />\n    );\n  });\n\n  return (\n    <div className=\"background\">\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Phone</th>\n            <th>Account Credit</th>\n            <th>Checked Out Movies</th>\n          </tr>\n        </thead>\n        <tbody>{customerCollection}</tbody>\n      </Table>\n    </div>\n  );\n};\n\nCustomerCollection.propTypes = {\n  customers: PropTypes.array,\n  selectCustomerCallback: PropTypes.func.isRequired\n}\n\nexport default CustomerCollection;\n","import React from \"react\";\nimport \"./Rental.css\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\n\nconst Rental = props => {\n  const { title, name, checkout_date, due_date } = props;\n\n  return (\n    <ul>\n      <Card bg=\"dark\" text=\"white\" style={{ width: \"18rem\" }}>\n        <Card.Body>\n          <Card.Title>{title}</Card.Title>\n          <Card.Text>Rented by: {name}</Card.Text>\n          <Card.Text>Checkout Date: {checkout_date}</Card.Text>\n          <Card.Text>Due Date: {due_date}</Card.Text>\n        </Card.Body>\n      </Card>\n    </ul>\n  );\n};\n\nexport default Rental;\n","import React from \"react\";\nimport \"./RentalCollection.css\";\nimport PropTypes from \"prop-types\";\nimport Rental from \"./Rental\";\n\nconst RentalCollection = props => {\n  const rentalCollection = props.rentals.map((rental, i) => {\n    return (\n      <div>\n        <Rental key={i} {...rental} />\n      </div>\n    );\n  });\n\n  return <div>{rentalCollection}</div>;\n};\n\nexport default RentalCollection;\n","import React from \"react\";\nimport \"./SearchResult.css\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\nconst SearchResult = props => {\n  const { title, overview, release_date, image_url, external_id } = props;\n\n  const onAddMovie = () => {\n    props.addMovieCallback({\n      title: title,\n      overview: overview,\n      release_date: release_date,\n      image_url: image_url,\n      external_id: external_id\n    });\n  };\n\n  return (\n    <ul>\n      <Accordion>\n        <Card bg=\"dark\" text=\"white\" style={{ width: \"20rem\" }}>\n          <Card.Header>\n            <Card.Img variant=\"top\" src={image_url} />\n            <Card.Title className=\"movie-title\">{title}</Card.Title>\n            <Button variant=\"primary\" type=\"button\" onClick={onAddMovie}>\n              Add this Movie\n            </Button>\n          </Card.Header>\n        </Card>\n        <Card bg=\"dark\" text=\"white\" style={{ width: \"20rem\" }}>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n              See More\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n              <Card.Text>{overview}</Card.Text>\n              <Card.Text>Release Date: {release_date}</Card.Text>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </ul>\n  );\n};\n\nSearchResult.propTypes = {\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  release_date: PropTypes.string,\n  image_url: PropTypes.string,\n  external_id: PropTypes.number\n};\n\nexport default SearchResult;\n","import React from \"react\";\nimport \"./SearchResults.css\";\nimport PropTypes from \"prop-types\";\nimport SearchResult from \"./SearchResult\";\n\nconst SearchResults = props => {\n  const searchResults = props.result.map((movie, i) => {\n    return (\n      <SearchResult\n        key={i}\n        {...movie}\n        addMovieCallback={props.addMovieCallback}\n      />\n    );\n  });\n\n  return searchResults;\n};\n\nSearchResults.propTypes = {\n  result: PropTypes.array,\n  addMovieCallback: PropTypes.func.isRequired\n};\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport MovieCollection from \"./components/MovieCollection\";\nimport CustomerCollection from \"./components/CustomerCollection\";\nimport RentalCollection from \"./components/RentalCollection\";\nimport SearchResults from \"./components/SearchResults\";\nimport FlashMessage from \"react-flash-message\";\n\nimport {\n  Navbar,\n  Nav,\n  Form,\n  FormControl,\n  Button,\n  Jumbotron,\n  Card\n} from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n      customers: [],\n      overdue: [],\n      searchResults: [],\n      selectedMovie: \"\",\n      selectedCustomer: \"\",\n      searchTerm: \"\",\n      error: \"\",\n      success: \"\"\n    };\n  }\n\n  onChange = event => {\n    event.preventDefault();\n    const value = event.target.value;\n\n    const newState = {\n      searchTerm: value\n    };\n\n    this.setState(newState);\n  };\n\n  selectCustomer = customerId => {\n    const { customers } = this.state;\n\n    const selectedCustomer = customers.find(customer => {\n      return customer.id === customerId;\n    });\n\n    this.setState({ selectedCustomer });\n  };\n\n  addRental = (movie, customerId) => {\n    let tenDaysLater = new Date(\n      new Date().getTime() + 10 * 24 * 60 * 60 * 1000\n    );\n\n    const queryParams = {\n      customer_id: customerId,\n      due_date: tenDaysLater\n    };\n\n    axios\n      .post(\n        \"http://localhost:3000/rentals/\" + `${movie.title}` + \"/check-out\",\n        queryParams\n      )\n      .then(response => {\n        this.setState({ success: \"Rental successfully added!\" });\n        this.componentDidMount();\n      })\n      .catch(error => {\n        this.setState({ error: error.message });\n      });\n\n    const newState = { selectedCustomer: \"\", selectedMovie: \"\" };\n    this.setState(newState);\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:3000/customers\")\n      .then(response => {\n        this.setState({\n          customers: response.data\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: \"There was an error in retrieving the data.\"\n        });\n      });\n\n    axios\n      .get(\"http://localhost:3000/movies\")\n      .then(response => {\n        this.setState({\n          movies: response.data\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: \"There was an error in retrieving the data.\"\n        });\n      });\n\n    axios\n      .get(\"http://localhost:3000/rentals/overdue\")\n      .then(response => {\n        this.setState({\n          overdue: response.data\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: \"There was an error in retrieving the data.\"\n        });\n      });\n  }\n\n  selectMovie = movieId => {\n    const { movies } = this.state;\n\n    const selectedMovie = movies.find(movie => {\n      return movie.id === movieId;\n    });\n\n    this.setState({ selectedMovie });\n  };\n\n  searchForMovies = movieTitle => {\n    axios\n      .get(`http://localhost:3000/movies/?query=${movieTitle}`)\n      .then(response => {\n        this.setState({\n          searchResults: response.data\n        });\n        this.componentDidMount();\n      })\n      .catch(error => {\n        this.setState({\n          error: error.message\n        });\n      });\n  };\n\n  addMovie = newMovie => {\n    axios\n      .post(\"http://localhost:3000/movies\", newMovie)\n      .then(response => {\n        const updatedData = this.state.movies;\n        updatedData.push(response.data);\n        this.setState({\n          movies: updatedData,\n          success: \"Movie was successfully added to the library!\"\n        });\n        this.componentDidMount();\n      })\n      .catch(error => {\n        this.setState({ error: error.message });\n      });\n    console.log(this.state.error);\n  };\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n              <Navbar.Brand>\n                <Link to=\"/\">VideoStore</Link>\n              </Navbar.Brand>\n              <Nav className=\"mr-auto\">\n                <Nav.Link type=\"button\">\n                  <Link to=\"/library\">All Movies</Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link to=\"/customers\">All Customers</Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link to=\"/overdue\">Overdue Movies</Link>\n                </Nav.Link>\n              </Nav>\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                  onChange={this.onChange}\n                />\n                <Button\n                  variant=\"outline-info\"\n                  onClick={() => {\n                    this.searchForMovies(this.state.searchTerm);\n                  }}\n                >\n                  <Link to=\"/search\">Search</Link>\n                </Button>\n              </Form>\n            </Navbar>\n          </>\n\n          <div className=\"error\">\n            <FlashMessage duration={8000} message={this.state.error}>\n              <strong>{this.state.error}</strong>\n            </FlashMessage>\n          </div>\n          <div className=\"success\">\n            <FlashMessage duration={8000}>\n              <strong>{this.state.success}</strong>\n            </FlashMessage>\n          </div>\n\n          {this.state.selectedMovie !== \"\" && (\n            <Card border=\"light\" bg=\"dark\" text=\"white\" body>\n              <div>\n                <strong>Selected Movie: </strong>\n                {this.state.selectedMovie.title}\n              </div>\n            </Card>\n          )}\n\n          {this.state.selectedCustomer !== \"\" && (\n            <Card border=\"light\" bg=\"dark\" text=\"white\" body>\n              <div>\n                <strong>Selected Customer: </strong>\n                {this.state.selectedCustomer.name}\n              </div>\n            </Card>\n          )}\n\n          {this.state.selectedCustomer !== \"\" &&\n            this.state.selectedMovie !== \"\" && (\n              <Button\n                onClick={() => {\n                  this.addRental(\n                    this.state.selectedMovie,\n                    this.state.selectedCustomer.id\n                  );\n                }}\n              >\n                Checkout Movie\n              </Button>\n            )}\n\n          <Switch>\n            <Route exact path=\"/\">\n              <div className=\"contents\">\n                <Jumbotron fluid>\n                  <h1>Video Store</h1>\n                  <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt ut labore et dolore magna\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    Duis aute irure dolor in reprehenderit in voluptate velit\n                    esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n                    occaecat cupidatat non proident, sunt in culpa qui officia\n                    deserunt mollit anim id est laborum.\n                  </p>\n                </Jumbotron>\n              </div>\n            </Route>\n            <Route path=\"/library\">\n              <div className=\"contents\">\n                <MovieCollection\n                  movies={this.state.movies}\n                  selectMovieCallback={this.selectMovie}\n                />\n              </div>\n            </Route>\n            <Route path=\"/customers\">\n              <div className=\"contents\">\n                <CustomerCollection\n                  customers={this.state.customers}\n                  selectCustomerCallback={this.selectCustomer}\n                />\n              </div>\n            </Route>\n            <Route path=\"/overdue\">\n              <div className=\"contents\">\n                <section className=\"no-overdue\">\n                  {this.state.overdue.length === 0 && (\n                    <Jumbotron>\n                      <h1>There are no overdue movies.</h1>\n                    </Jumbotron>\n                  )}\n                </section>\n\n                {this.state.overdue.length !== 0 && (\n                  <div>\n                    <RentalCollection rentals={this.state.overdue} />\n                  </div>\n                )}\n              </div>\n            </Route>\n            <Route path=\"/search\">\n              <div className=\"contents\">\n                <SearchResults\n                  result={this.state.searchResults}\n                  addMovieCallback={this.addMovie}\n                />\n              </div>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}